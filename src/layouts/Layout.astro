---
import "@/styles/globals.css";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="generator" content={Astro.generator} />
    <meta
      name="google-site-verification"
      content="fn7CZ9ufF3RJaL2rqGUn4ifV3VJAvZDI7CCKK9-WaiE"
    />
    <title>{title}</title>
  </head>
  <body class="min-w-full min-h-screen flex flex-col relative">
    <slot />
  </body>
</html>

<style is:global>
  html {
    scroll-behavior: smooth;
    overflow-y: scroll;
  }

  body {
    --sb-size: 14px;
    --sb-thumb-color: #ccc;
    --sb-thumb-color-hover: #aaa;
    --sb-background: #fafafa;
  }

  .dark body {
    --sb-thumb-color: #333;
    --sb-thumb-color-hover: #555;
    --sb-background: #0a0a0a;
  }

  ::-webkit-scrollbar {
    width: var(--sb-size);
  }

  ::-webkit-scrollbar-track {
    background: var(--sb-background);
  }

  ::-webkit-scrollbar-thumb {
    border: 4px solid var(--sb-background);
    background: var(--sb-thumb-color);
    border-radius: 10px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: var(--sb-thumb-color-hover);
  }

  ::-webkit-scrollbar-thumb:active {
    border-inline-width: 3px;
  }

  @supports not selector(::-webkit-scrollbar) {
    body {
      scrollbar-color: var(--sb-thumb-color) var(--sb-background);
    }
  }

  div ::-webkit-scrollbar {
    height: 5px;
  }
  div ::-webkit-scrollbar-thumb {
    border: 1px solid var(--sb-background);
    background: var(--sb-thumb-color);
  }

  .isSnapped {
    filter: blur(0);
    opacity: 1;
  }

  @media screen and (min-width: 768px) {
    .zoomIn .carouselImage {
      --zoom: 1; /* control the zoom level */
      --cursor: zoom-in; /* the cursor style */
      /* the coordinate of the zoom */
      --x: 50%;
      --y: 50%;
      /**/
      transform: scale(var(--zoom));
      transform-origin: var(--x) var(--y);
      cursor: var(--cursor);
    }
  }
</style>
